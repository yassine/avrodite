{# @pebvariable name="context" type="org.avrodite.tools.template.BeanTemplateContext"#}
{# @pebvariable name="field" type="org.avrodite.tools.template.FieldTemplateContext"#}
{% macro decode_map(context, field, depth, reference) %}
    {% set item_ref = "item_"+depth+"_"+context.random() %}
    {% set c_ref = "count_"+depth+"_"+context.random() %}
    {% set index_ref = "idx_"+depth+"_"+context.random() %}
    long {{ c_ref }} = (long) buffer.readLong();
    if({{ c_ref }} != 0){
      {{ reference }} = new java.util.HashMap<String, {{ field.signatures[depth] }}>();
      {{ field.signatures[depth] }} {{ item_ref }};
      String key;
      int nullable = 0;
      for(int {{ index_ref }} = 0; {{ index_ref }} < {{ c_ref }}; {{ index_ref }}++){
        key = buffer.readString();
        nullable = buffer.readInt();
        if(nullable == 0){
          {{ decode_field(context, field, depth + 1, item_ref) }}
          {{ reference }}.put(key, {{ item_ref }});
        }else if(nullable != 1) {
          throw AvroCodecException.API.unexpectedInput(2, nullable);
        }
      }
      {{ c_ref }} = buffer.readLong();
      if ({{ c_ref }} != 0) {
        throw AvroCodecException.API.illegalMapEnd({{ c_ref }});
      }
    }
{% endmacro %}
